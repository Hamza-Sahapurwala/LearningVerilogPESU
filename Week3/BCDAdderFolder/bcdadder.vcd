$date
	Fri Aug 22 10:08:55 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module bcdaddertb $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sum [3:0] $end
$var wire 4 ) six [3:0] $end
$var wire 4 * s [3:0] $end
$var wire 1 " cout $end
$var wire 4 + co [3:0] $end
$scope module u0 $end
$var wire 4 , a [3:0] $end
$var wire 4 - b [3:0] $end
$var wire 1 % cin $end
$var wire 4 . sum [3:0] $end
$var wire 1 / cout $end
$var wire 3 0 c [2:0] $end
$scope module u0 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 % c $end
$var wire 1 3 carry $end
$var wire 1 4 sum $end
$var wire 1 5 w1 $end
$var wire 1 6 w2 $end
$var wire 1 7 w3 $end
$var wire 1 8 w4 $end
$var wire 1 9 w5 $end
$upscope $end
$scope module u1 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < c $end
$var wire 1 = carry $end
$var wire 1 > sum $end
$var wire 1 ? w1 $end
$var wire 1 @ w2 $end
$var wire 1 A w3 $end
$var wire 1 B w4 $end
$var wire 1 C w5 $end
$upscope $end
$scope module u2 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F c $end
$var wire 1 G carry $end
$var wire 1 H sum $end
$var wire 1 I w1 $end
$var wire 1 J w2 $end
$var wire 1 K w3 $end
$var wire 1 L w4 $end
$var wire 1 M w5 $end
$upscope $end
$scope module u3 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 P c $end
$var wire 1 / carry $end
$var wire 1 Q sum $end
$var wire 1 R w1 $end
$var wire 1 S w2 $end
$var wire 1 T w3 $end
$var wire 1 U w4 $end
$var wire 1 V w5 $end
$upscope $end
$upscope $end
$scope module u1 $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 Y y $end
$upscope $end
$scope module u2 $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var wire 1 \ y $end
$upscope $end
$scope module u3 $end
$var wire 1 ] a $end
$var wire 1 ^ b $end
$var wire 1 _ c $end
$var wire 1 " y $end
$upscope $end
$scope module u4 $end
$var wire 4 ` a [3:0] $end
$var wire 4 a b [3:0] $end
$var wire 1 b cin $end
$var wire 4 c sum [3:0] $end
$var wire 1 d cout $end
$var wire 3 e c [2:0] $end
$scope module u0 $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 b c $end
$var wire 1 h carry $end
$var wire 1 i sum $end
$var wire 1 j w1 $end
$var wire 1 k w2 $end
$var wire 1 l w3 $end
$var wire 1 m w4 $end
$var wire 1 n w5 $end
$upscope $end
$scope module u1 $end
$var wire 1 o a $end
$var wire 1 p b $end
$var wire 1 q c $end
$var wire 1 r carry $end
$var wire 1 s sum $end
$var wire 1 t w1 $end
$var wire 1 u w2 $end
$var wire 1 v w3 $end
$var wire 1 w w4 $end
$var wire 1 x w5 $end
$upscope $end
$scope module u2 $end
$var wire 1 y a $end
$var wire 1 z b $end
$var wire 1 { c $end
$var wire 1 | carry $end
$var wire 1 } sum $end
$var wire 1 ~ w1 $end
$var wire 1 !" w2 $end
$var wire 1 "" w3 $end
$var wire 1 #" w4 $end
$var wire 1 $" w5 $end
$upscope $end
$scope module u3 $end
$var wire 1 %" a $end
$var wire 1 &" b $end
$var wire 1 '" c $end
$var wire 1 d carry $end
$var wire 1 (" sum $end
$var wire 1 )" w1 $end
$var wire 1 *" w2 $end
$var wire 1 +" w3 $end
$var wire 1 ," w4 $end
$var wire 1 -" w5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0-"
0,"
0+"
0*"
1)"
1("
0'"
0&"
1%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
1j
1i
0h
0g
1f
b0 e
0d
b1001 c
0b
b0 a
b1001 `
0_
0^
0]
0\
0[
1Z
0Y
0X
1W
0V
0U
0T
0S
0R
1Q
1P
0O
0N
1M
0L
0K
1J
0I
0H
1G
0F
1E
1D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
15
14
03
02
11
b100 0
0/
b1001 .
b100 -
b101 ,
b0 +
b1001 *
b0 )
b1001 (
b100 '
b101 &
0%
b100 $
b101 #
0"
b1001 !
$end
#10000
1d
1#"
0s
1-"
0t
1+"
1""
1'"
1{
1|
b110 e
1r
1^
1]
1$"
1x
1\
1Y
1!"
1u
1o
1[
1z
1p
0i
1>
1}
b100 !
b100 (
b100 c
0("
b110 )
b110 a
1"
0j
1<
0~
0P
1)"
0_
0f
13
1y
1X
b1 0
0G
1%"
1Z
1W
b1110 +
0/
04
19
1H
0M
b1110 *
b1110 .
b1110 `
1Q
0V
05
16
1I
0J
1R
0T
12
0D
1N
b101 $
b101 '
b101 -
b1001 #
b1001 &
b1001 ,
#20000
1z
1p
b110 )
b110 a
1"
1d
1'"
0("
1-"
0_
1|
1)"
1+"
0/
1#"
1%"
1Z
1W
0V
1{
1}
1$"
1]
1Q
0T
b110 e
1r
0~
1!"
1""
1Y
0P
0s
1x
1^
1y
1X
0G
b101 !
b101 (
b101 c
1i
0t
1u
b1110 +
1\
1H
0L
1j
0<
1o
1[
0F
1f
03
1>
b0 0
0=
b1111 *
b1111 .
b1111 `
14
09
1?
0B
15
06
1;
01
b111 $
b111 '
b111 -
b1000 #
b1000 &
b1000 ,
#30000
1'"
1|
1#"
1{
b110 e
1r
0d
0s
1x
0}
0$"
1("
0-"
0^
0]
b1000 !
b1000 (
b1000 c
0i
0t
1u
1~
0!"
0""
0)"
0+"
0\
0Y
1_
0j
1<
1o
1[
0y
0X
0%"
0Z
0W
b1 +
1/
0f
b1 0
13
1>
0H
0Q
1V
b10 *
b10 .
b10 `
04
19
0?
0I
0R
1S
05
16
0;
0E
1O
11
b1001 $
b1001 '
b1001 -
b1001 #
b1001 &
b1001 ,
#40000
1d
1-"
1+"
1^
1)"
1\
0("
1{
1%"
1Z
1W
1'"
1r
1Q
b110 e
1|
0s
1x
1P
1#"
0t
1u
1G
1z
1p
1M
0}
0$"
b110 )
b110 a
1"
1K
1~
0!"
0""
0_
b0 !
b0 (
b0 c
0i
1F
0y
0X
b1100 +
0/
0j
b111 0
1=
1C
0H
0V
0f
15
06
1B
1@
1A
1I
0S
b1010 *
b1010 .
b1010 `
04
17
02
1;
0O
1:
1D
0N
1%
b10 $
b10 '
b10 -
b111 #
b111 &
b111 ,
#50000
